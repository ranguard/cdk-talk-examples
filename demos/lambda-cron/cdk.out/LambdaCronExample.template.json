{
  "Resources": {
    "SingletonServiceRoleDDD815CD": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "LambdaCronExample/Singleton/ServiceRole/Resource"
      }
    },
    "Singleton8C7B99F3": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "ZipFile": "def main(event, context):\n    print(\"I'm running!\")"
        },
        "Handler": "index.main",
        "Role": {
          "Fn::GetAtt": [
            "SingletonServiceRoleDDD815CD",
            "Arn"
          ]
        },
        "Runtime": "python2.7",
        "Timeout": 300
      },
      "DependsOn": [
        "SingletonServiceRoleDDD815CD"
      ],
      "Metadata": {
        "aws:cdk:path": "LambdaCronExample/Singleton/Resource"
      }
    },
    "SingletonAllowEventRuleLambdaCronExampleRule4981BEF87EE49ED6": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "Singleton8C7B99F3",
            "Arn"
          ]
        },
        "Principal": "events.amazonaws.com",
        "SourceArn": {
          "Fn::GetAtt": [
            "Rule4C995B7F",
            "Arn"
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "LambdaCronExample/Singleton/AllowEventRuleLambdaCronExampleRule4981BEF8"
      }
    },
    "Rule4C995B7F": {
      "Type": "AWS::Events::Rule",
      "Properties": {
        "ScheduleExpression": "cron(0 18 ? * MON-FRI *)",
        "State": "ENABLED",
        "Targets": [
          {
            "Arn": {
              "Fn::GetAtt": [
                "Singleton8C7B99F3",
                "Arn"
              ]
            },
            "Id": "Target0"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "LambdaCronExample/Rule/Resource"
      }
    }
  }
}